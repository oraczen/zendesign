{"version":3,"file":"atoms-scrollArea-scrollArea-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AAEA;AACA;AAEA;AAEA;AAKA;AACA;AACA;AAEA;AAAA;AACA;AAMA;AAEA;AAKA;AACA;AACA;AAQA;AAEA;AAAA;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AAEA;AACA;AAEA;AAEA;AASA;AACA;AACA;AACA;AAKA;;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AAEA;AACA;AACA","sources":["webpack://zendesign/./src/stories/atoms/scrollArea/scrollArea.stories.tsx","webpack://zendesign/./src/components/atoms/scroll-area.tsx","webpack://zendesign/./src/components/ui/separator.tsx","webpack://zendesign/./src/lib/utils.ts"],"sourcesContent":["import { Meta, StoryObj } from \"@storybook/react\";\r\nimport { ScrollArea } from \"@/components/atoms/scroll-area\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\n\r\nconst meta: Meta<typeof ScrollArea> = {\r\n  title: \"Atoms/ScrollArea\",\r\n  component: ScrollArea,\r\n  tags: [\"autodocs\"],\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<typeof ScrollArea>;\r\n\r\nconst RenderScrollArea = (args: object) => (\r\n  <ScrollArea className=\"h-72 w-48 rounded-md border\" {...args}>\r\n    <div className=\"p-4\">\r\n      <h4 className=\"mb-6 text-sm font-medium leading-none\">Tags</h4>\r\n      {Array.from({ length: 20 }).map((_, i) => (\r\n        <div key={i}>\r\n          <div className=\"text-sm\">Item {i + 1}</div>\r\n          <Separator className=\"my-2\" />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </ScrollArea>\r\n);\r\n\r\nexport const Default: Story = {\r\n  render: RenderScrollArea,\r\n};\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }\r\n","import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"sourceRoot":""}