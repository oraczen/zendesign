{"version":3,"file":"atoms-progress-progress-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AACA;AAEA;AAEA;AAKA;AACA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AAEA;AACA;AACA","sources":["webpack://zendesign/./src/stories/atoms/progress/progress.stories.ts","webpack://zendesign/./src/components/atoms/progress.tsx","webpack://zendesign/./src/lib/utils.ts"],"sourcesContent":["import { Meta, StoryObj } from \"@storybook/react\";\r\nimport { Progress } from \"@/components/atoms/progress\";\r\n\r\nconst meta: Meta<typeof Progress> = {\r\n  title: \"Atoms/Progress\",\r\n  component: Progress,\r\n  tags: [\"autodocs\"],\r\n  argTypes: {\r\n    value: {\r\n      control: { type: \"range\", min: 0, max: 100, step: 1 },\r\n      description: \"Progress value between 0 and 100\",\r\n      defaultValue: 50,\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<typeof Progress>;\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    value: 50,\r\n  },\r\n};\r\n","\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Progress = React.forwardRef<\r\n  React.ElementRef<typeof ProgressPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\r\n>(({ className, value, ...props }, ref) => (\r\n  <ProgressPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ProgressPrimitive.Indicator\r\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\r\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\r\n    />\r\n  </ProgressPrimitive.Root>\r\n))\r\nProgress.displayName = ProgressPrimitive.Root.displayName\r\n\r\nexport { Progress }\r\n","import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"sourceRoot":""}