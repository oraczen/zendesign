{"version":3,"file":"atoms-resizable-resizable-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAIA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AAEA;AACA;AAEA;AAEA;AAKA;AAIA;;AAIA;AAEA;AAQA;AAIA;AAEA;AACA;AACA;AAAA;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AACA;AACA","sources":["webpack://zendesign/./src/stories/atoms/resizable/resizable.stories.tsx","webpack://zendesign/./src/components/atoms/resizable.tsx","webpack://zendesign/./src/lib/utils.ts"],"sourcesContent":["import { Meta, StoryObj } from \"@storybook/react\";\r\nimport {\r\n  ResizablePanelGroup,\r\n  ResizablePanel,\r\n  ResizableHandle,\r\n} from \"@/components/atoms/resizable\";\r\n\r\nconst meta: Meta<typeof ResizablePanelGroup> = {\r\n  title: \"Atoms/Resizable\",\r\n  component: ResizablePanelGroup,\r\n  tags: [\"autodocs\"],\r\n  parameters: {\r\n    layout: \"centered\",\r\n  },\r\n  args: {\r\n    direction: \"horizontal\",\r\n  },\r\n  argTypes: {\r\n    direction: {\r\n      control: \"radio\",\r\n      options: [\"horizontal\", \"vertical\"],\r\n      description: \"The direction of resizing\",\r\n    },\r\n  },\r\n  decorators: [\r\n    (Story) => (\r\n      <div style={{ height: \"400px\", border: \"1px solid #ccc\" }}>{Story()}</div>\r\n    ),\r\n  ],\r\n};\r\n\r\nexport default meta;\r\n\r\ntype Story = StoryObj<typeof ResizablePanelGroup>;\r\n\r\nconst RenderResizable = ({\r\n  direction,\r\n}: {\r\n  direction: \"horizontal\" | \"vertical\";\r\n}) => (\r\n  <ResizablePanelGroup direction={direction}>\r\n    <ResizablePanel defaultSize={25}>\r\n      <div className=\"flex h-full items-center justify-center bg-muted p-6\">\r\n        <span className=\"font-semibold\">Panel 1</span>\r\n      </div>\r\n    </ResizablePanel>\r\n    <ResizableHandle withHandle />\r\n    <ResizablePanel defaultSize={50}>\r\n      <div className=\"flex h-full items-center justify-center bg-muted p-6\">\r\n        <span className=\"font-semibold\">Panel 2</span>\r\n      </div>\r\n    </ResizablePanel>\r\n    <ResizableHandle withHandle />\r\n    <ResizablePanel defaultSize={25}>\r\n      <div className=\"flex h-full items-center justify-center bg-muted p-6\">\r\n        <span className=\"font-semibold\">Panel 3</span>\r\n      </div>\r\n    </ResizablePanel>\r\n  </ResizablePanelGroup>\r\n);\r\n\r\nexport const Default: Story = {\r\n  render: RenderResizable,\r\n  args: {\r\n    direction: \"horizontal\",\r\n  },\r\n};\r\n\r\nexport const Vertical: Story = {\r\n  render: RenderResizable,\r\n  args: {\r\n    direction: \"vertical\",\r\n  },\r\n};\r\n","\"use client\"\r\n\r\nimport { DragHandleDots2Icon } from \"@radix-ui/react-icons\"\r\nimport * as ResizablePrimitive from \"react-resizable-panels\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ResizablePanelGroup = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\r\n  <ResizablePrimitive.PanelGroup\r\n    className={cn(\r\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst ResizablePanel = ResizablePrimitive.Panel\r\n\r\nconst ResizableHandle = ({\r\n  withHandle,\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\r\n  withHandle?: boolean\r\n}) => (\r\n  <ResizablePrimitive.PanelResizeHandle\r\n    className={cn(\r\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {withHandle && (\r\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\r\n        <DragHandleDots2Icon className=\"h-2.5 w-2.5\" />\r\n      </div>\r\n    )}\r\n  </ResizablePrimitive.PanelResizeHandle>\r\n)\r\n\r\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\r\n","import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"sourceRoot":""}